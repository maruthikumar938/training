   PATH log4j;
  -- DECLARE ADD_URL,SUB_URL,MUL_URL,DIV_URL EXTERNAL CHARACTER;
   DECLARE Config_File EXTERNAL CHARACTER 'C:\LOG4J\samples\brokerlog.xml';
   DECLARE ns NAMESPACE 'http://tempuri.org/';

    CREATE COMPUTE MODULE GATEWAY_Compute
	DECLARE rc BOOLEAN;
	CREATE FUNCTION Main() RETURNS BOOLEAN
	 BEGIN 
		 CALL initLog(Config_File)INTO rc;    
	 	CALL CopyEntireMessage(); 
		RETURN TRUE;
	 END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		
	 DECLARE ref REFERENCE TO InputRoot.XMLNSC.Request;	
	 
	 DECLARE Operation CHARACTER ;
	 
	 SET Operation = FIELDNAME(InputRoot.XMLNSC.Request.*[<]);
	 
	 --SET OutputRoot = InputRoot; 
	 
	  CASE
	  	
		WHEN Operation = 'Add' THEN
		SET OutputRoot.XMLNSC.ns:Add.ns:intA = ref.Add.A;
		SET OutputRoot.XMLNSC.ns:Add.ns:intB = ref.Add.B;
		SET OutputLocalEnvironment.Destination.HTTP.RequestURL = 'http://localhost:7080/ADDITION' ;
			
		WHEN Operation = 'Sub' THEN
		SET OutputRoot.XMLNSC.ns:Subtract.ns:intA = ref.Sub.A;
		SET OutputRoot.XMLNSC.ns:Subtract.ns:intB = ref.Sub.B;	
		SET OutputLocalEnvironment.Destination.HTTP.RequestURL = 'http://localhost:7080/SUBSTRACTION';
		
		WHEN Operation = 'Mul' THEN
		SET OutputRoot.XMLNSC.ns:Multiply.ns:intA = ref.Mul.A;
		SET OutputRoot.XMLNSC.ns:Multiply.ns:intB = ref.Mul.B;		 
		SET OutputLocalEnvironment.Destination.HTTP.RequestURL = 'http://localhost:7080/MULTIPLICATION'; 
		
		WHEN Operation = 'Div' THEN 
		SET OutputRoot.XMLNSC.ns:Divide.ns:intA = ref.Div.A;
		SET OutputRoot.XMLNSC.ns:Divide.ns:intB = ref.Div.B;		
		SET OutputLocalEnvironment.Destination.HTTP.RequestURL = 'http://localhost:7080/DIVISION';
		
		ELSE 	
		SET OutputRoot.XMLNSC.Response = 'Error Occured';	 
		
	  END CASE;
	  
	        -----------------------DB LOG-----------------------------
	 

	    DECLARE ID BLOB;
	  --  DECLARE REQUEST_ID CHAR;
	  DECLARE status CHARACTER;
	  DECLARE req_time TIMESTAMP CURRENT_TIMESTAMP ;
	    
	  SET ID  = InputLocalEnvironment.Destination.HTTP.RequestIdentifier; 
      -- SET REQUEST_ID = CAST(ID AS CHAR);
	  SET Environment.req_time = CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'yyyy:MM:dd:HH:mm:SS'); 
	  
	  IF OutputRoot.XMLNSC.Response = 'Error Occured'  THEN
	  	
	  SET status = 'FAILURE';
	  
	  DECLARE req CHARACTER CAST(ASBITSTREAM(InputRoot.XMLNSC CCSID InputRoot.Properties.CodedCharSetId) AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId);
	  DECLARE response CHARACTER CAST(ASBITSTREAM(OutputRoot CCSID InputRoot.Properties.CodedCharSetId) AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId); 
	  CALL DB_PROCEDURE(CAST(ID AS CHARACTER),req,status,response,req_time);    
	    	 
	  ELSE
	  	
	  SET status = 'SUCCESS'; 
	  
	  DECLARE req CHARACTER CAST(ASBITSTREAM(InputRoot.XMLNSC CCSID InputRoot.Properties.CodedCharSetId) AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId);
	  DECLARE response CHARACTER CAST(ASBITSTREAM(OutputRoot CCSID InputRoot.Properties.CodedCharSetId) AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId);
      CALL DB_PROCEDURE(CAST(ID AS CHARACTER),req,status,response,req_time);   	
         
	  END IF;
	    
	     -----------------------LOG4J -----------------------------
	     
             CALL writerToLogFile(MessageFlowLabel,'Log','INFO','========================== REQUEST RECEIVED===============')INTO rc;
             DECLARE data CHARACTER CAST(ASBITSTREAM(InputRoot.XMLNSC CCSID InputRoot.Properties.CodedCharSetId) AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId);
             CALL writerToLogFile(MessageFlowLabel,'Log','INFO',data) INTO rc; 

             CALL writerToLogFile(MessageFlowLabel,'Log','INFO','========================== RESPONCE RECEIVED===============')INTO rc; 
             DECLARE responce CHARACTER CAST(ASBITSTREAM(OutputRoot CCSID InputRoot.Properties.CodedCharSetId) AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId);
             CALL writerToLogFile(MessageFlowLabel,'Log','INFO',responce) INTO rc;
             
             
	END; 
 
    CREATE PROCEDURE DB_PROCEDURE(IN REQUEST_ID CHARACTER,IN REQUEST CHARACTER,IN STATUS CHARACTER, IN RESPONSE CHARACTER, IN REQUEST_TIME TIMESTAMP)  
	LANGUAGE DATABASE 
	EXTERNAL NAME "DBLOG_PROCEDURE";
   END MODULE; 